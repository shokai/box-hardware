//*****************************************************************************
//*****************************************************************************
//  FILENAME:  ADCINCVR_2.h
//  Version: 3.1, Updated on 2009/10/15 at 17:11:37
//  Generated by PSoC Designer 5.0.1127.0
//
//  DESCRIPTION:  ADCINCVR User Module C Language interface file.
//-----------------------------------------------------------------------------
//      Copyright (c) Cypress Semiconductor 2009. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************

#include <m8C.h>

//-------------------------------------------------
// Defines for ADCINCVR_2 API's.
//-------------------------------------------------

// Power Setting Constants
#define ADCINCVR_2_OFF            0
#define ADCINCVR_2_LOWPOWER       1
#define ADCINCVR_2_MEDPOWER       2
#define ADCINCVR_2_HIGHPOWER      3

// Function Fastcall Pragmas
#pragma fastcall16 ADCINCVR_2_Start
#pragma fastcall16 ADCINCVR_2_SetPower
#pragma fastcall16 ADCINCVR_2_GetSamples
#pragma fastcall16 ADCINCVR_2_StopAD
#pragma fastcall16 ADCINCVR_2_Stop
#pragma fastcall16 ADCINCVR_2_fIsData
#pragma fastcall16 ADCINCVR_2_fIsDataAvailable
#pragma fastcall16 ADCINCVR_2_iGetData
#pragma fastcall16 ADCINCVR_2_iGetDataClearFlag
#pragma fastcall16 ADCINCVR_2_ClearFlag
#pragma fastcall16 ADCINCVR_2_SetResolution

//-------------------------------------------------
// Prototypes of the ADCINCVR_2 API.
//-------------------------------------------------

extern void ADCINCVR_2_Start(BYTE bPower);
extern void ADCINCVR_2_SetPower(BYTE bPower);
extern void ADCINCVR_2_GetSamples(BYTE bNumSamples);
extern void ADCINCVR_2_StopAD(void);
extern void ADCINCVR_2_Stop(void);
extern CHAR ADCINCVR_2_fIsData(void);
extern CHAR ADCINCVR_2_fIsDataAvailable(void);
extern INT  ADCINCVR_2_iGetData(void);
extern INT  ADCINCVR_2_iGetDataClearFlag(void);
extern void ADCINCVR_2_ClearFlag(void);

extern void ADCINCVR_2_SetResolution(BYTE bResolution);

#define ADCINCVR_2_bNUMBITS  0x0d

//-------------------------------------------------
// Hardware Register Definitions
//-------------------------------------------------

// Integrator Block Register Definitions
#pragma ioport  ADCINCVR_2_bfAtoDcr0:   0x084
BYTE            ADCINCVR_2_bfAtoDcr0;
#pragma ioport  ADCINCVR_2_bfAtoDcr1:   0x085
BYTE            ADCINCVR_2_bfAtoDcr1;
#pragma ioport  ADCINCVR_2_bfAtoDcr2:   0x086
BYTE            ADCINCVR_2_bfAtoDcr2;
#pragma ioport  ADCINCVR_2_bfAtoDcr3:   0x087
BYTE            ADCINCVR_2_bfAtoDcr3;

// Counter Block Register Definitions
#pragma ioport  ADCINCVR_2_fCounterFN:  0x12c
BYTE            ADCINCVR_2_fCounterFN;
#pragma ioport  ADCINCVR_2_fCounterSL:  0x12d
BYTE            ADCINCVR_2_fCounterSL;
#pragma ioport  ADCINCVR_2_fCounterOS:  0x12e
BYTE            ADCINCVR_2_fCounterOS;
#pragma ioport  ADCINCVR_2_bCount:  0x02c
BYTE            ADCINCVR_2_bCount;
#pragma ioport  ADCINCVR_2_bPeriod: 0x02d
BYTE            ADCINCVR_2_bPeriod;
#pragma ioport  ADCINCVR_2_bCompare:    0x02e
BYTE            ADCINCVR_2_bCompare;
#pragma ioport  ADCINCVR_2_bCounter_CR0:    0x02f
BYTE            ADCINCVR_2_bCounter_CR0;


// PWM16 Block Register Definitions
#pragma ioport  ADCINCVR_2_bfPWM_LSB_FN:    0x138
BYTE            ADCINCVR_2_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_2_bfPWM_MSB_FN:    0x13c
BYTE            ADCINCVR_2_bfPWM_MSB_FN;
#pragma ioport  ADCINCVR_2_fPWM_LSB_CR0:    0x03b
BYTE            ADCINCVR_2_fPWM_LSB_CR0;
#pragma ioport  ADCINCVR_2_fPWM_MSB_CR0:    0x03f
BYTE            ADCINCVR_2_fPWM_MSB_CR0;
#pragma ioport  ADCINCVR_2_bPWM_Count_MSB:  0x03c
BYTE            ADCINCVR_2_bPWM_Count_MSB;
#pragma ioport  ADCINCVR_2_bPWM_Count_LSB:  0x038
BYTE            ADCINCVR_2_bPWM_Count_LSB;
#pragma ioport  ADCINCVR_2_bPWM_Period_MSB: 0x03d
BYTE            ADCINCVR_2_bPWM_Period_MSB;
#pragma ioport  ADCINCVR_2_bPWM_Period_LSB: 0x039
BYTE            ADCINCVR_2_bPWM_Period_LSB;
#pragma ioport  ADCINCVR_2_bPWM_IntTime_MSB:    0x03e
BYTE            ADCINCVR_2_bPWM_IntTime_MSB;
#pragma ioport  ADCINCVR_2_bPWM_IntTime_LSB:    0x03a
BYTE            ADCINCVR_2_bPWM_IntTime_LSB;
#pragma ioport  ADCINCVR_2_bfPWM_LSB_FN:    0x138
BYTE            ADCINCVR_2_bfPWM_LSB_FN;
#pragma ioport  ADCINCVR_2_bfPWM_MSB_FN:    0x13c
BYTE            ADCINCVR_2_bfPWM_MSB_FN;

// end of file ADCINCVR_2.h
